ab -n 100 -c 10 {{url}}##Execute 100 HTTP GET requests, processing up to 10 requests concurrently, to given URL.
ab -n 100 {{url}}##Execute 100 HTTP GET requests to given URL.
ack --ruby {{each_with_object}}##Find files in a specific language
ack -ch {{foo}}##Count the total number of matches for the term "foo"
ack -cl {{foo}}##Show the file names containing "foo" and number of matches in each file
ack {{foo}}##Find files containing "foo"
ag '^ba(r|z)$'##Find files whose contents match a regular expression:
ag -g foo##Find files with a name matching "foo"
ag foo -G bar##Find "foo" in files with a name matching "bar"
ag foo##Find files containing "foo"
alias -p##full list of aliased words
alias {{la}}="{{ls -a}}"##overriding la as ls -a
alias {{rm}}="{{rm -i}}"##turning rm an interative command
alias {{word}}="{{command}}"##creating a generic alias
apropos -l {{regular_expression}}##search without restricting output to terminal width
apropos {{regular_expression}}##search for keyword
ar -r {{libfoo.a}} {{foo.o}} {{bar.o}} {{baz.o}}##Replace or add files to an archive
ar -rs {{libfoo.a}} {{foo.o}} {{bar.o}} {{baz.o}}##Create an archive with files and an accompanying object file index
ar -s {{libfoo.a}}##Insert an object file index (equivalent to using `ranlib`)
ar -t {{libfoo.a}}##List the members of an archive
ar -x {{libfoo.a}}##Extract all members from an archive
awk '{print $5}' {{filename}}##Print the fifth column in a space separated file
awk '{s+=$1; print $1} END {print "--------"; print s}' {{filename}}##Sum the values in the first column and pretty-print the values and then the total
awk '{s+=$1} END {print s}' {{filename}}##Sum the values in the first column and print the total
awk -F ',' '{print $3}' {{filename}}##Print the third column in a comma separated file
bc -i##Run calculator in interactive mode
bc -l <<< "s(1) + c(1)"##Calculate expression with sine and cosine using mathlib
bc <<< "(1 + 2) * 2 ^ 2"##Calculate the result of an expression
bc <<< "scale=10; 5 / 3"##Calculate with the given precision
bundle gem {{gemname}}##Create a new gem skeleton
bundle install##Installs all gems defined in the gemfile expected in the working directory.
bundle update --source {{gemname}}##Update one specific gem defined in the gemfile
bundle update##Update all gems by the rules defined in the gemfile and regenerate gemfile.lock
cal -m {{12}}##Display a calendar for the current month or specified month
cal -m {{Dec}}##Display a calendar for the current month or specified month
cal -y##Display a calendar for the current year or a specified year
cal 2013##Display a calendar for the current year or a specified year
cal##Display a calendar for the current month or specified month
calibre-server --port {{port}}##Start server on different port. Access at http://localhost:port
calibre-server --username {{username}} --password {{password}}##Password protect the server.
calibre-server##Start a server to distribute ebooks. Access at http://localhost:8080
calibredb add {{file1 file2 …}}##Add one or more ebooks to the library.
calibredb list --search {{search-term}}##Search for ebooks displaying additional information.
calibredb list##List ebooks in the library with additional information.
calibredb remove {{id1 id2 …}}##Remove one or more ebooks from the library. You need ebook-ids (see above)
calibredb search {{search term}}##Search for just ids of ebooks.
cat somefile.txt | nc -l {{port}}##serve a file
cat {{bigfile.txt}} | parallel --pipe --block 1M {{command}}##break stdin into ~1M blocks, feed each block to stdin of new command
cat {{file1}} {{file2}} > {{target-file}}##Concatenate several files into the target file.
cat {{file1}} {{file2}} >> {{target-file}}##Append serveral files into the target file.
cat {{file1}} | comm -12 - {{file2}}##Print only lines common to both files, read one file from stdin.
cat {{file_path}} | grep {{something}}##use the standard input instead of a file
cat {{file}}##Print the contents of a file to the standard output
cd -##Go to the previously chosen directory
cd ..##Go up to the parent of the current directory
cd {{/path/to/directory}}##Go to the given directory
cd##Go to home directory of current user
chmod a+rx {{file}}##Give (a)ll users rights to read and execute
chmod g-x {{file}}##Remove executable rights from the (g)roup
chmod o=g {{file}}##Give (o)thers (not in the file owner's group) the same rights as the group
chmod u+rw {{file}}##Give the user rights to (r)ead and (w)rite to a file/directory
chmod u+x {{file}}##Give the (u)ser who owns a file the right to e(x)ecute it
chown --reference={{reference-file}} {{path/to/file}}##use the owner and group of a reference file and apply those values to another file
chown -R {{user}} {{path/to/folder}}##recursively change the owner of an entire folder
chown -h {{user}} {{path/to/symlink}}##change the owner of a symbolic link
chown {{user}} {{path/to/file}}##change the user of a file
chown {{user}}:{{group}} {{path/to/file}}##change the user and group of a file
chsh -s {{path/to/shell_binary}} {{username}}##change shell
cksum {{filename}}##Display a 32 bit checksum, size in bytes and filename
clang {{input_source.c}} -Wall -o {{output_executable}}##Activate output of all errors and warnings
clang {{input_source.c}} -o {{output_executable}} -I{{header_path}} -L{{library_path}} -l{{library_name}}##Include libraries located at a different path than the source file
clang {{input_source.c}} -o {{output_executable}}##Compile a source code file into an executable binary
comm -12 {{file1}} {{file2}}##Print only lines common to both files.
comm -13 {{file1}} {{file2}}##Print lines only found in second file.
comm -23 {{file1}} {{file2}}##Print lines only found in first file.
comm {{file1}} {{file2}}##Produce three tab-separated columns: lines only in first file, lines only in second file and common lines.
convert {{image.jpg}} {{image.png}}##Convert an image from JPG to PNG
convert {{image.png}} -resize 50% {{image2.png}}##Scale an image 50% it's original size
convert {{image.png}} -resize 640x480 {{image2.png}}##Scale an image keeping the original aspect ratio to a maximum dimension of 640x480.
convert {{image1.png}} {{image2.png}} {{image3.png}} +append {{image123.png}}##Horizontally append images
cordova create {{path}} {{package.name}} {{project.name}}##Create a cordova project
cordova info##Display the current workspace status
cordova platform add {{platform}}##Add a cordova platform
cordova platform remove {{platform}}##Remove a cordova platform
cordova plugin add {{pluginid}}##Add a cordova plugin
cordova plugin remove {{pluginid}}##Remove a cordova plugin
cp -r {{/path/to/original}} {{/path/to/copy}}##Copy directories recursive using the option -r
cp -vr {{/path/to/original}} {{/path/to/copy}}##Show files as they are copied
cp {{/path/to/original}} ../{{path/to/copy}}##Copy a file to a parent directory
cp {{/path/to/original}} {{/path/to/copy}}##Copy files in arbitrary locations
cp {{file.html}}{,.backup}##Make a copy of a file, adding an extension
cp {{file.}}{html,backup}##Make a copy of a file, changing the extension
curl "{{URL}}" -o filename##Download a URL to a file
curl --data {{name=bob}} {{http://localhost/form}}##send form-encoded data
curl --head {{http://localhost}}##head request
curl -X POST -H "Content-Type: application/json" -d {{'{"name":"bob"}'}} {{http://localhost/login}}##send JSON data
curl -X {{DELETE}} {{http://localhost/item/123}}##specify an HTTP method
curl -u myusername:mypassword {{http://localhost}}##pass a user name and password for server authentication
cut -c {{1-16}} {{file}}##Cut out the first sixteen characters of each line of the given files
cut -c {{1-16}}##Cut out the first sixteen characters of each line of STDIN
cut -c{{3-}}##Cut out everything from the 3rd character to the end of each line
cut -d'{{:}}' -f{{5,10}}##Cut out the fields five and 10, split on the colon character of each line
cut -d'{{:}}' -f{{5-10}}##Cut out the fields five through 10, split on the colon character of each line
cut -d'{{:}}' -f{{5}}##Cut out the fifth field, split on the colon character of each line
d (next)##page down
d (next), D (previous)##page up / down
date +"%c"##Display the date using the default locale
date -u +"%Y-%m-%dT%H:%M:%SZ"##Display the date in UTC and ISO 8601 format
deactivate##Stop the environment
deluser -r {{name}}##Remove a user along with their home directory and mail spool
deluser {{name}} {{group}}##Remove a user from a group
deluser {{name}}##Remove a user
df -h##display all file systems and their disk usage in human readable form
df##display all file systems and their disk usage
diff -r {{directory1}} {{directory2}}##Compare directories recursively
diff -rq {{directory1}} {{directory2}}##Compare directories, only showing the names of files that differ
diff -w {{file1}} {{file2}}##Compare files, ignoring white spaces
diff -y {{file1}} {{file2}}##Compare files, showing differences side by side
diff {{file1}} {{file2}}##Compare files
dig +short {{hostname.com}} MX##Lookup the mail server associated with a given domain name (MX record)
dig +short {{hostname.com}}##Lookup the IP(s) associated with a hostname (A records)
dig @8.8.8.8 {{hostname.com}}##Specify an alternate DNS server to query (8.8.8.8 is google's public DNS)
docker ps -a##List all docker containers (running and stopped)
docker ps##List of running docker containers
docker start {{container}}##Start a container
docker stop {{container}}##Stop a container
drush cc all##Clear all caches
drush cc css-js##Clear CSS and JavaScript caches
drush dis {{foo}}##Disable module "foo"
drush dl {{foo}}##Download module "foo"
drush dl {{foo}}-7.x-2.1-beta1##Download version 7.x-2.1-beta1 of module "foo"
drush en {{foo}}##Enable module "foo"
ebook-convert {{source}} {{destination}}##Convert an ebook into another format.
echo "example" | tee -a {{FILE}}##append to the given FILEs, do not overwrite
echo "example" | tee {{FILE}}##Copy standard input to each FILE, and also to standard output.
echo "test" | lp##Print the output of a command to the default printer (see `lpstat` command).
echo '{{query1}}; {{query2}}' | psql {{database}}##Run several queries against the given *database*. Note: useful in shell scripts
echo {{"Hello World"}}##Print a text message. Note: quotes are optional.
echo {{"My path is $PATH"}}##Print a message with environment variables
electrum -p socks5:{{127.0.0.1}}:9050 -s {{56ckl5obj37gypcu.onion}}:50001:t -1##Connect only to a specific electrum-server instance
electrum -w {{new-wallet.dat}} create##Create a new wallet
electrum -w {{recovery-wallet.dat}} restore -o##Restore an existing wallet from seed offline
electrum listaddresses -a##Display all wallet receiving addresses
electrum mktx {{recipient}} {{amount}} -f 0.0000001 -F {{from}} -o##Create a signed transaction offline
electrum signmessage {{address}} {{message}}##Sign a message
electrum verifymessage {{address}} {{signature}} {{message}}##Verify a message
emacs -nw##Open emacs in console mode (without X window)
emacs {{filename}}##Open a file in emacs
env -i {{program}}##Clear the environment and run a program
env -u {{variable}} {{program}}##Remove variable from the environment and run a program
env {{variable}}={{value}} {{program}}##Set a variable and run a program
env##Show the environment
exiftool -All= {{file}}##Remove all EXIF metadata from the given files
fdupes -r {{directory}}##search all directories recursively
fdupes {{directory1}} -R {{directory2}}##search multiple directories, one recursively
fdupes {{directory1}} {{directory2}}##search multiple directories
fdupes {{directory}}##search a single directory
ffmpeg -f image2 -i {{image%d.jpg}} {{video.mpg}}##Combine numbered images (image1.jpg, image2.jpg, etc) into a video
ffmpeg -i {{in.avi}} -acodec libfaac -ab 128k -vcodec mpeg4 -b 1250K {{out.mp4}}##Convert AVI video to MP4. AAC Audio @ 128kbit, Video @ 1250Kbit
ffmpeg -i {{video-filename}} -vn -ar 44100 -ac 2 -ab 192 -f mp3 {{sound.mp3}}##Extract the sound from a video and save it as MP3
ffmpeg -i {{video-filename}} {{image%d.png}}##Convert frames from a video into individual numbered images
file -z {{foo.zip}}##Look inside a zipped file and determine the file type(s) inside
file {{filename}}##Give a description of the type of the specified file.  Works fine for files with no file extension.
find {{root_path}} -name {{'*.py'}} -exec {{wc -l {} }}\;##run a command for each file, use {} within the command to access the filename
find {{root_path}} -name {{'*.py'}} -mtime {{-180d}} -delete##delete files by name, older than a certain number of days
find {{root_path}} -name {{'*.py'}} -mtime {{-1d}}##find files modified since a certain time
find {{root_path}} -name {{'*.py'}}##find files by extension
find {{root_path}} -path {{'**/lib/**/*.py'}}##find files matching path pattern
find {{root_path}} -size +500k -size -10MB -iname {{'*.TaR.gZ'}}##find files using case insensitive name matching, of a certain size
fswebcam --timestamp {{timestamp}} {{filename}}##Take a picture with timestamp(timestamp string is formatted by strftime)
fswebcam -d {{device}} {{filename}}##Take a picture from selected device(Default is /dev/vidoe0)
fswebcam -r {{width}}x{{height}} {{filename}}##Take a picture with custom resolution
fswebcam {{filename}}##Take a picture
fusermount -u {{mountpoint}}##unmounting remote directory
g (start), G (end)##go to start / end of file
gcc {{source.c}} -Wall -Og -o {{executable}}##Allow warnings, debug symbols in output
gcc {{source.c}} -o {{executable}} -I{{header_path}} -L{{library_path}} -l{{library_name}}##Include libraries from a different path
gcc {{source1.c}} {{source2.c}} -o {{executable}}##Compile multiple source files into executable
gem install {{gemname}} -v {{1.0.0}}##Install specific version of a gem
gem install {{gemname}}##Install latest version of a gem
gem list##List all gems
gem uninstall {{gemname}}##Uninstall a gem
gem update {{gemname}}##Update a gem
gifsicle --delay={{10}} --loop *.gif > {{anim.gif}}##Making a GIF animation with gifsicle
gifsicle -b {{anim.gif}} --replace '#0' {{new.gif}}##You can also edit animations by replacing, deleting, or inserting frames
gifsicle {{anim.gif}} '#0' > {{firstframe.gif}}##Extracting frames from an animation
git --help##Call general help
git --version##Check the Git version
git add -f##Also add ignored files
git add -u##Only add already tracked files
git add .##Add all files (tracked and untracked)
git add {{PATHSPEC}}##Add a file to the index
git blame -e {{file}}##Print file with author email and commit hash on each line
git blame {{file}}##Print file with author name and commit hash on each line
git branch -a##List all local and remote branches
git branch -d {{BRANCH-NAME}}##Delete a local branch
git branch -m##Move/Rename a branch
git branch {{BRANCH-NAME}}##Create new branch based on current branch
git branch##List local branches. The current branch is highlighted by `*`.
git checkout -b {{BRANCH-NAME}}##Create and switch to a new branch
git checkout .##Undo unstaged local modification
git checkout {{BRANCH-NAME}}##Switch to another branch
git clone --depth 10 {{REMOTE-REPOSITORY-LOCATION}}##Clone an existing repository, and truncate to the specified number of revisions, save your time mostly
git clone -l##For cloning from the local machine
git clone -q##Do it quietly
git clone {{REMOTE-REPOSITORY-LOCATION}}##Clone an existing repository
git commit --amend##Replace the last commit with currently staged changes
git commit -m {{MESSAGE}}##Commit staged files to the repository with comment
git config --global --unset alias.st##Remove option alias.st from ~/.gitconfig
git config --global alias.ls "status"##Set option alias.ls=status in file ~/.gitconfig
git config --list --global##Print global list of options, set in ~/.gitconfig
git config --list --local##Print list of options for current repository
git config --list##Get full list of options
git config alias.st##Get value of alias.ls option
git diff --name-only {{PATHSPEC}}##Show only names of changed files.
git diff --staged##Show staged (added, but not yet committed) changes only.
git diff --summary {{PATHSPEC}}##Output a condensed summary of extended header information.
git diff {{PATHSPEC}}##Show changes to tracked files
git help {{COMMAND}}##Call help on a command
git init --bare##Initialize a barebones repository
git init##Initialize a new local repository
git log --oneline##Show only the first line of each commits
git log -p {{path}}##Show the history of a particular file or directory, including differences
git log##Show a history of commits
git merge -e {{BRANCH-NAME}}##Edit the merge message
git merge {{BRANCH-NAME}}##Merge a branch with your current branch
git mv --force {{file}} {{target}}##Overwrite the file in the target path if it exists
git mv {{filename}} {{new_filename}}##Rename file and add renaming to the next commit
git mv {{path/to/file}} {{new/path/to/file}}##Move file inside the repo and add the movement to the next commit
git pull --rebase##Download changes from default remote repository and use fast forward
git pull {{remote_name}} {{branch}}##Download changes from given remote repository and branch, then merge them into HEAD
git pull##Download changes from default remote repository and merge it
git push --prune {{REMOTE-NAME}}##Remove remote branches which don't exist locally
git push --tags##Publish tags
git push {{REMOTE-NAME}} :{{REMOTE-BRANCH}}##Remove remote branch
git push {{REMOTE-NAME}} {{LOCAL-BRANCH}}##Publish local changes on a remote branch
git push {{REMOTE-NAME}} {{LOCAL-BRANCH}}:{{REMOTE-BRANCH}}##Publish local changes on a remote branch of different name
git remote -v##Show a list of existing remotes, their names and URL
git remote add {{remote_name}} {{remote_url}}##Add a remote
git remote remove {{remote_name}}##Remove a remote
git remote rename {{old_name}} {{new_name}}##Rename a remote
git remote set-url {{remote_name}} {{new_url}}##Change the URL of a remote
git rm --cached {{file}}##Remove file from repository index but keep it untouched locally
git rm -r {{directory}}##Remove directory
git rm {{file}}##Remove file from repository index and filesystem
git stash apply {{stash_name}}##re-apply a stash by name
git stash drop stash@{index}##drop a stash by an index
git stash list##list all stashes
git stash pop##re-apply the latest stash
git stash save -u {{optional_stash_name}}##include new files in the stash (leaves the index completely clean)
git stash save {{optional_stash_name}}##stash current changes (except new files)
git status -s##Give output in short format
git status##Show changed files which are not yet added for commit
git tag -d {{tag_name}}##Delete the tag with the given name
git tag {{tag_name}} -m {{tag_message}}##Create a tag with the given message
git tag {{tag_name}}##Create a tag with the given name pointing to the current commit
git tag##List all tags
git {{COMMAND}}##Execute Git command
gpg --clearsign {{doc.txt}}##sign doc.txt without encryption (writes output to doc.txt.asc)
gpg --decrypt {{doc.txt.gpg}}##decrypt doc.txt.gpg (output to STDOUT)
gpg --encrypt --recipient {{alice@example.com}} {{doc.txt}}##encrypt doc.txt for alice@example.com (output to doc.txt.gpg)
gpg --import {{public.gpg}}##Import a public key
gpg --symmetric {{doc.txt}}##encrypt doc.txt with only a passphrase (output to doc.txt.gpg)
gradle assembleRelease##Compile and Release package
gradle build##Compile a package
gradle clean##Clear the build folder
grep -C 3 {{something}} {{file_path}}##see 3 lines of context
grep -c {{something}} {{file_path}}##print the count of matches instead of the matching text
grep -e {{^regex$}} {{file_path}}##use a regex
grep -r {{something}} .##search recursively in current directory for an exact string
grep -v {{something}}##invert match for excluding specific strings
grep {{something}} {{file_path}}##search for an exact string
gzip -9 -c {{file.ext}} > compressed-file.ext.gz##specify the compression level. 1=Fastest (Worst), 9=Slowest (Best), Default level is 6
gzip -c -d {{file.ext.gz}} > uncompressed-file.ext##uncompress a gzipped file specifying the output filename
gzip -c {{file.ext}} > compressed-file.ext.gz##compress a file specifying the output filename
gzip -d {{file.ext.gz}}##decompress a file, replacing it with the original uncompressed version
gzip {{file.ext}}##compress a file, replacing it with a gzipped compressed version
haxelib git {{libname}} {{GIT-URL}}##Install the development version of a library from a Git repository
haxelib install {{libname}}##Install a Haxe library
haxelib search {{keyword}}##Search for a Haxe library
haxelib upgrade##Upgrade all installed Haxe libraries
history -c##Clear the commands history list (only for `bash`)
history##Display the commands history list with line numbers
host -t {{field}} {{domain}}##Lookup a field (CNAME, TXT,...) of a domain
host {{domain}}##Lookup A, AAAA, and MX records of a domain
host {{ip_address}}##Reverse lookup an IP
iconv -f {{from_encoding}} -t {{to_encoding}} {{input_file}}##convert file and print to stdout
iconv -f {{from_encoding}} {{input_file}} > {{output_file}}##convert file to current locale
iconv -l##list supported encodings
ifconfig -a##Display details of all interfaces, including disabled interfaces.
ifconfig eth0 down##Disable eth0 interface.
ifconfig eth0 up##Enable eth0 interface.
ifconfig eth0 {{ip_address}}##Assign IP address to eth0 interface.
ifconfig eth0##View network settings of an ethernet adapter.
ioping -R /dev/sda##Measure disk seek rate on /dev/sda.
ioping -RL /dev/sda##Measure disk sequential speed on /dev/sda.
ioping -c 10 -s 1M /tmp##Measure latency on /tmp using 10 requests of 1 megabyte each.
ioping .##Show disk I/O latency using the default values and the current directory
ipcs -a##General information about all the IPC
ipcs -qi 32768##Specific information about the Message Queue which has the id 32768
java -jar {{filename.jar}}##Execute a .jar program.
java -version##Display JDK, JRE and HotSpot versions.
java {{filename}}##Execute a java .class file that contains a main method by using just the class name.
javac {{filename.java}}##Compile a .java file.
kill -l##list signal names
kill {{process_id}}##kill the process
less {{source_file}}##open a file
ln -s {{path/to/original/file}} {{path/to/link}}##create a symbolic link to a file or folder
ln -sf {{path/to/new/original/file}} {{path/to/file/link}}##overwrite a symbolic link to a file
ln -sfT {{path/to/new/original/file}} {{path/to/folder/link}}##overwrite a symbolic link to a folder
ln {{path/to/original/file}} {{path/to/link}}##create a hard link to a file or folder
lp -P 1,3-5,16 {{path/to/filename}}##Print only certain pages to the default printer (print pages 1, 3-5, and 16).
lp -d {{printer_name}} {{path/to/filename}}##Print a file to a named printer (see `lpstat` command).
lp -n {{N}} {{path/to/filename}}##Print N copies of file to default printer (replace N with desired number of copies).
lp {{path/to/filename}}##Print a file to the default printer.
lpstat -d##Show the default printer.
lpstat -p##List printers present on the machine and whether they are enabled for printing.
lpstat -t##Display all available status information.
lpstat -u {{user}}##Show a list of print jobs queued by the specified user.
ls *.txt | parallel -j4 gzip##read arguments from stdin, run 4 jobs at once
ls *{{suffix}}##List all files with a prefix/suffix
ls -A1##List all file names (no extra info)
ls -S##Sort the results by size, last modified date, or creation date
ls -U##Sort the results by size, last modified date, or creation date
ls -a##List all files, even hidden
ls -l##List all files with their rights, groups, owner
ls -lh##List all files and display the file size in a human readable format
ls -r##Reverse the order of the results
ls -t##Sort the results by size, last modified date, or creation date
ls {{prefix}}*##List all files with a prefix/suffix
lsof -i :{{8080}}##find the process that opened a local internet port
lsof -t {{/path/to/file}} | xargs kill -9##only output the process PID (e.g. to pipe into kill)
lsof {{/path/to/file}}##find the processes that have a given file open
man --path##Display path searched for manpages
man -k {{keyword}}##Do a keyword search for manpages containing a search string
man -w {{command}}##Display location of a manpage rather than the manpage itself
man {{command}}##Display man page for a command
mkdir -p {{path}}##creates directories recursively (useful for creating nested dirs)
mkdir {{directory}}##creates a directory in current folder or given path
more {{source_file}}##open a file
mount -a##Mount all the filesystem defined in /etc/fstab
mount -t {{filesystem_type}} {{path_to_device_file}} {{directory_to_mount_to}}##Mount a device
mount -t {{iso9660}} -o ro {{/dev/cdrom}} {{/cdrom}}##Mount a CD-ROM device (with the filetype ISO9660) to /cdrom (readonly)
mount {{/my_drive}}##Mount a specific filesystem described in /etc/fstab (e.g. "/dev/sda1 /my_drive ext2 defaults 0 2")
mount##Show all mounted filesystems
mtr -4 {{host}}##Force IP IPv4 or IPV6
mtr -n {{host}}##Disable IP address and host name mapping
mtr -w {{host}}##Generate output after pinging each hop 10 times
mtr {{host}}##Traceroute to a host and continuously ping all intermediary hops
mv -f {{source}} {{target}}##Do not prompt for confirmation before overwriting existing files
mv -fi {{source}} {{target}}##Do not prompt for confirmation before overwriting existing files but write to standard error before overriding
mv -v {{source}} {{target}}##Move files in verbose mode, showing files after they are moved
mv {{source}} {{target}}##Move files in abitrary locations
mysql -u {{user}} --password {{database_name}} < {{filename.sql}}##Restoring a backup, user will be prompted for a password
mysql -u {{user}} --password {{database_name}}##Connect to a database, user will be prompted for a password
mysql {{database_name}} < {{script.sql}}##Execute SQL statements in a script file (batch file)
mysql {{database_name}}##Connect to a database
mysqldump -u {{user}} --password {{database_name}} > {{filename.sql}}##Create a backup, user will be prompted for a password
nc  -l {{port}}##listen on a specified port
nc -k -l {{port}}##server stay up after client detach
nc -q {{timeout}} {{ip_address}}##client stay up after EOF
nc -w {{timeout_in_seconds}} {{ipaddress}} {{port}}##set a timeout
nc {{ip_address}} {{port}} > somefile.txt##receive a file
nc {{ip_address}} {{port}}##connect to a certain port (you can then write to this port)
ncal -e 2013##Display date of Easter (western churches)
ncal -e##Display date of Easter (western churches)
nginx -c {{config_file}} -p {{prefix/for/relative/paths}}##Start server with a prefix for all relative paths in config file
nginx -c {{config_file}}##Start server with custom config file
nginx##Start server with default config
nice -n {{niceness_value}} {{command}}##Launch a program with altered priority.
nmap -A {{address_or_addresses}}##Also enable service detection, OS fingerprinting and traceroute.
nmap -T4 {{address_or_addresses}}##Assume good network connection and speed up execution:
nmap -p {{port1,port2,...,portN}} {{address_or_addresses}}##Scan a specific list of ports (use -p- for all ports 1-65535)
nmap -sSU {{address_or_addresses}}##Perform TCP and UDP scanning (use -sU for UDP only, -sZ for SCTP, -sO for IP):
nmap -sn {{ip_or_hostname}} {{optional_another_address}}##Try to determine whether the specified hosts are up and what are their names.
nmap {{ip_or_hostname}} {{optional_another_address}}##Like above, but also run a default 1000-port TCP scan if host seems up.
node -e "{{code}}"##Evaluate JavaScript by passing it in the command
node {{file}}.js##Run a JavaScript file
node##Start a REPL loop (interactive shell)
nohup {{command options}}##Run process that can live beyond the terminal
npm init##Create a new project in the current folder
npm install -g {{module_name}}##Download and install a module globally
npm install {{module_name}}@{{version}} --save##Download a given dependency, and add it to the package.json
npm install##Download all dependencies referenced in package.json
npm prune##Cleanup packages (removes packages which are installed but are not listed in `package.json`)
npm publish##Publish the current project
npm version {{1.2.3}}##Set the version of the current project
nvm alias default {{node_version}}##Set the default NodeJS version
nvm exec {{node_version}} node {{app.js}}##Run app in a specific version of NodeJS
nvm install {{node_version}}##Install a specific version of NodeJS
nvm list##List all available NodeJS versions and print the default one
nvm run {{node_version}} --version##Run a specific version NodeJS REPL
nvm use {{node_version}}##Use a specific version NodeJS in the current shell
pandoc {{input.md}} -o {{output.pdf}}##Convert file to pdf (the output format is automatically determined from the output file's extension)
parallel -S {{machine1}},{{machine2}} {{command}} ::: {{arg1}} {{arg2}}##run on multiple machines via SSH
parallel convert {} {.}.png ::: *.jpg##Convert JPG images to PNG using replacement strings
parallel gzip ::: {{file1}} {{file2}} {{file3}}##gzip several files at once, using all cores
passwd -S##Get the current statuts of the user
passwd -d##Make the password of the account blank (it will set the named account passwordless)
passwd {{new password}}##Change the password of the current user
passwd {{username}} {{new password}}##Change the password of the specified user
paste -d '\n' {{file1}} {{file2}}##merge two files, with lines added alternatively.
paste -d {{delimiter}} {{file1}} {{file2}}##merge two files side by side, each in its column, using the specified delimiter.
paste -s -d {{delimiter}} {{file}}##join all the lines into a single line, using the specified delimiter.
paste -s {{file}}##join all the lines into a single line, using TAB as delimiter.
paste {{file1}} {{file2}}##merge two files side by side, each in its column, using TAB as delimiter.
patch -R < {{patchfile}}.diff##apply the reverse of a patch
patch -p1 < {{patchfile}}.diff##apply a patch to current directory
patch < {{patchfile}}.diff##apply a patch
pgrep -f "{{ssh root}}"##search full command line with parameters instead of just the process name
pgrep -u root {{firefox}}##search for process run by a specific user
pgrep {{Finder}}##return PIDs of any running processes with a matching command string
php -S {{host:port}}##Start a PHP built-in web server in the current directory.
php -a##Run PHP interactively
php -l {{file}}##Check syntax (lint)
php -r "{{code}}"##Run PHP code. Notes: a) Don't use <? ?> tags; b) Escape double quotes with backslash
php {{file}}##Parse and execute a file
phpunit --coverage-html {{directory}}##Run tests and generate a coverage report in HTML.
phpunit --group {{name}}##Run tests annotated with the given group.
phpunit {{path/to/TestFile.php}}##Run tests in a specific file.
phpunit##Run tests in the current direcotry. Note: Expects you to have a 'phpunit.xml'
ping -c 4 {{host}}##Ping host limiting the number of packages to be send to four
ping -i 0.5 {{host}}##Ping host, waiting for 0.5 s between each request (default is 1 s)
ping -n {{host}}##Ping host without trying to lookup symbolic names for addresses
ping {{host}}##Ping host
pip freeze > {{requirements.txt}}##Save installed packages to file
pip install -U {{package_name}}##Upgrade a package
pip install -r {{requirements.txt}}##Install packages from file
pip install {{package_name}}##Install a package
pip install {{package_name}}=={{package_version}}##Install a specific version of a package
pip uninstall {{package_name}}##Uninstall a package
pkill -9 {{Finder}}##kill all processes which match
play {{audiofile1}} {{audiofile2}}##Play the given audio files
play {{audiofile}} reverse##Play the given audio in reverse
play {{audiofile}} speed 2.0##Play the given audio at twice the speed
play {{audiofile}}##Play the given audio file
printf -v {{myvar}} {{"This is %s = %d\n" "a year" 2016}}##Store a formatted message in a variable (does not work on zsh)
printf {{"%s\n"}} {{"Hello world"}}##Print a text message
printf {{"\e[1;34m%.3d\e[0m\n"}} {{42}}##Print an integer in bold blue
printf {{"\u20AC %.2f\n"}} {{123.4}}##Print a float number with the unicode Euro sign
printf {{"var1: %s\tvar2: %s\n"}} {{"$VAR1"}} {{"$VAR2"}}##Print a text message composed with environment variables
ps aux | grep {{string}}##search for a process that matches a string
ps aux##list all running processes
ps auxww##list all running processes including the full command string
psql -c '{{query}}' {{database}}##Run single *query* against the given *database*. Note: useful in shell scripts
psql -h {{host}} -p {{port}} -U {{username}} -W {{database}}##Connect to *database*, user will be prompted for password
psql -h {{host}} -p {{port}} -U {{username}} {{database}}##Connect to *database* on given server *host* running on given *port* with *username* given, no password prompt
psql {{database}}##Connect to *database*. It connects to localhost using default port *5432* with default user
pushd +4##Rotate stack by making the 5th element the top of the stack
pushd < {{directory}}##Switch to directory and push it on the stack
pushd##Switch first and second directories on the stack
pwd -P##Print the current directory, and resolve all symlinks (e.g. show the "physical" path)
pwd##Print the current directory
python -c {{command}}##Execute Python language single command
python -m {{module}} {{arguments}}##Run library module as a script (terminates option list)
python {{script.py}}##Execute script in a given Python file
python##Call a Python interactive shell (REPL)
redis-cli -a {{password}}##Specify a password
redis-cli -h {{host}} -p {{port}}##Connect to a remote server
redis-cli -h {{host}}##Connect to a remote server
redis-cli {{redis command}}##Executes Redis command
redis-cli##Connect to the local server
rename 's/\s+/_/g' {{*.txt}}##Replace whitespace with underscores
rename --nows {{*.txt}}##Replace whitespace with underscores
rename -c {{*.txt}}##Convert to lower case
rename -n {{'s/foo/bar/'}} {{*.txt}}##No action, just show what renames would occur
rename {{'s/foo/bar/'}} {{*.txt}}##Change foo to bar in matching filenames
renice -n {{niceness_value}} -g {{group}}##Change priority of all processes that belongs to a group.
renice -n {{niceness_value}} -p {{pid}}##Change priority of a running process.
renice -n {{niceness_value}} -u {{user}}##Change priority of all processes owned by a user.
rm -i {{\*}}##Prompt before every removal
rm -r {{/path/to/folder}}##Remove recursively a directory and all it's subdirectories
rm {{/path/to/file}} {{/otherpath/to/file2}}##Remove files from arbitrary locations
rmdir -p {{path}}##removes directories recursively (useful for nested dirs)
rmdir {{directory}}##removes directory, provided it is empty. Use `rm` to remove not empty directories.
rsync *.js mike@devbox:~/projects/cakeStore/styles/##transfer all *.js files in current directory to host 'devbox' as user 'mike'
rsync -e ssh --progress {{remote_host_name}}:{{remote_file}} {{local_file}}##transfer file over SSH and show progress
rsync -r mike@devbox:~/projects/cakeStore /Users/mike/devProjects/##transfer a directory and all its children from a remote to local
rsync -ru mike@devbox:~/projects/ ./projects/##transfer only updated files from remote host
rsync {{path_to_file}} {{remote_host_name}}:{{remote_host_location}}##transfer file from local to remote host
rsync {{remote_host_name}}:{{remote_file_location}} {{local_file_location}}##transfer file from remote host to local
salt '*' state.highstate##Execute a highstate on all connected minions:
salt '*' test.ping##List connected minions
salt '*.domain.com' pkg.upgrade##Upgrade packages using the OS package manager (apt, yum, brew) on a subset of minions
salt '{{minion_id}}' cmd.run "ls "##Execute an arbitrary command on a particular minion:
salt-call -l debug state.highstate##Perform a highstate with verbose debugging output
salt-call grains.items##List this minion's grains
salt-call state.highstate test=true##Perform a highstate dry-run, compute all changes but don't actually perform them
salt-call state.highstate##Perform a highstate on this minion
salt-key -F##Print fingerprints of all public keys
salt-key -L##List all accepted, unaccepted and rejected minion keys
salt-key -a {{MINION_ID}}##Accept or reject a minion key by name
salt-key -r {{MINION_ID}}##Accept or reject a minion key by name
salt-run manage.status##Show status of all minions
salt-run manage.up##Show all minions which are disconnected
scp -i {{/local/key}} {{10.0.0.1}}:{{/remote/path/file.txt}} {{/local/folder}}##download a file with ssh key
scp -r {{/local/folder}} {{10.0.0.1}}:{{/remote/path/}}##upload or download a directory
scp -r {{10.0.0.1}}:{{/remote/path}} {{/local/folder}}##upload or download a directory
scp {{/local/file.txt}} {{10.0.0.1}}:{{/remote/path/newname.txt}}##upload a file, or upload and rename a file
scp {{/local/file.txt}} {{10.0.0.1}}:{{/remote/path/}}##upload a file, or upload and rename a file
scp {{/local/file.txt}} {{my_user}}@{{10.0.0.1}}:{{/remote/path}}##specify username on host
scp {{10.0.0.1}}:{{/remote/path/file.txt}} {{/local/folder}}##download a file
scp {{10.0.0.1}}:{{/remote/path/file.txt}} {{20.0.0.2}}:{{/other/remote/path}}##copy a file from one host to another
screen -S {{name}}##Start a new named screen session
screen -X -S {{screen id}} quit##Kill a detached screen
screen -ls##Show open screen sessions
screen -r {{screen id}}##Reattach to an open screen
screen##Start a new screen session
sed 's/{{find}}/{{replace}}/g' {{filename}}##replace all occurrences of a string in a file, and print the result
sed -E 's/{{regex}}/{{replace}}/g' {{filename}}##replace all occurrences of an extended regular expression in a file
sed -e 's/{{find}}/{{replace}}/g' -e 's/{{find}}/{{replace}}/g' {{filename}}##replace all occurrences of multiple strings in a file
sed -i 's/{{find}}/{{replace}}/g' {{filename}}##replace all occurrences of a string in a file, and overwrite the file contents
sort -r {{filename}}##Sort a file in descending order
sort -t: -k 3n /etc/passwd##Sort passwd file by the 3rd field
sort {{filename}}##Sort a file in ascending order
source {{path/to/venv}}/bin/activate##Start (select) the environment
sox --norm {{input_audiofile}} {{output_audiofile}}##Normalize an audio file (adjust volume to the maximum peak level, without clipping)
sox -m {{input_audiofile1}} {{input_audiofile2}} {{output_audiofile}}##Merge two audio files into one
sox {{input_audiofile}} -n stat##Print statistical data of an audio file
sox {{input_audiofile}} {{output_audiofile}} reverse##Reverse and save an audio file
sox {{input_audiofile}} {{output_audiofile}} trim {{start}} {{end}}##Trim an audio file to the specified times
split -C 512 {{filename}}##Split a file with at most 512 bytes of lines in each split.
split -l 10 {{filename}}##Split a file, each split having 10 lines (except the last split)
split -n 5 {{filename}}##Split a file into 5 files. File is split such that each split has same size (except the last split)
srm -i {{\*}}##Prompt before every removal
srm -m {{/path/to/file}}##Removes a file after overwriting (single pass, 7 pass, 35 pass)
srm -r {{/path/to/folder}}##Scurely remove recursively a directory and all it's subdirectories
srm -s {{/path/to/file}}##Removes a file after overwriting (single pass, 7 pass, 35 pass)
srm {{/path/to/file}}##Removes a file after overwriting (single pass, 7 pass, 35 pass)
ssh -A {{username}}@{{remote_host}}##ssh enable agent forward
ssh -D {{9999}} -C {{username}}@{{remote_host}}##ssh tunneling: dynamic port forwarding (SOCKS proxy on localhost:9999)
ssh -L {{9999}}:slashdot.org:80 {{username}}@{{remote_host}}##ssh tunneling: forward a specific port (localhost:9999 to slashdot.org:80)
ssh -i {{/path/to/key_file}} {{username}}@{{remote_host}}##connecting to a remote server with a specific identity (private key)
ssh {{remote_host}} "{{command -with -flags}}"##run a command on a remote server
ssh {{username}}@{{remote_host}} -p {{2222}}##connecting to a remote server with specific port
ssh {{username}}@{{remote_host}}##connecting to a remote server
sshfs {{username}}@{{remote_host}}:{{remote_directory}} -C##use compression
sshfs {{username}}@{{remote_host}}:{{remote_directory}} -p {{2222}}##mounting remote directory from server with specific port
sshfs {{username}}@{{remote_host}}:{{remote_directory}} {{mountpoint}}##mounting remote directory
strings -n {{length}} {{file}}##Limit results to strings at least *length* characters long
strings -t d {{file}}##Prefix each result with its offset within the file
strings -t x {{file}}##Prefix each result with its offset within the file in hexadecimal
strings {{file}}##Print all strings in a binary
sudo -u {{www}} {{vi}} {{/var/www/index.html}}##To edit a file as user www:
sudo {{!!}}##To repeat the last command as sudo
sudo {{ls}} {{/usr/local/scrt}}##Listing of an unreadable directory:
sudo {{shutdown}} -r +10 {{"Cya soon!"}}##To shutdown the machine:
svn add PATH...##Put files and directories under version control, scheduling them for addition to repository. They will be added in next commit.
svn ci -m {{commit log message}} {{[PATH...]}}##Send changes from your working copy to the repository
svn co {{url/to/repository}}##Check out a working copy from a repository
svn help##Show detailed help
svn up##Bring changes from the repository into the working copy
tac {{file1}} {{file2}} > {{target-file}}##Concatenate several files reversed into the target file.
tac {{file1}}##Print the contents of *file1* reversed to the standard output
tail -c {{num}} {{file}}##show last 'num' bytes in file
tail -f {{file}}##keep reading file until ctrl-c
tail -n +{{num}} {{file}}##show all file since line 'num'
tail -n {{num}} {{file}}##show last 'num' lines in file
tar caf {{target.tar.xz}} {{file1 file2 file3}}##create a compressed archive, using archive suffix to determine the compression program
tar cf {{target.tar}} {{file1 file2 file3}}##create an archive from files
tar czf {{target.tar.gz}} {{file1 file2 file3}}##create a gzipped archive
tar tvf {{source.tar}}##list the contents of a tar file
tar xf {{source.tar}} -C {{folder}}##extract an archive in a target folder
tar xjf {{source.tar.bz2}}##extract a bzipped archive in the current directory
tar xzf {{source.tar.gz}}##extract a gzipped archive in the current directory
tcpdump -A tcp##capture all TCP traffic showing contents (ASCII) in console
tcpdump -i {{eth0}} src {{192.168.1.1}} dest {{192.168.1.2}} and port 80##capture the traffic from a specific interface, source, destination and port
tcpdump -i {{eth0}}##capture the traffic of a specific interface
tcpdump -w dumpfile.pcap not port 22##capture all traffic except traffic over port 22 and save to a dump file
tcpdump host {{www.example.com}}##capture the traffic from or to a host
tcpdump net {{192.168.1.0/24}}##capture the traffic of a network
telnet  {{ip_address}} {{port}}##telnet to a certain port
telnet -e x {{ip_address}} {{port}}##specify an escape character (x is the escape character)
test ! -d {{path/to/directory}}##Test if directory not exists
test $MY_VAR == '/bin/zsh'##Test if given variable is equal to given string
test -e {{filename}}##Test if file exists
test -z $GIT_BRANCH##Test if given variable is empty
test {{condition}} && echo "true" || echo "false"##If-else statement
time ls##Time "ls"
tmux a -t {{name}}##Attach to a named session
tmux a##Attach to a session
tmux kill-session -t {{name}}##Kill session
tmux ls##List sessions
tmux new -s {{name}}##Start a new named tmux session
tmux##Start a new tmux session
touch -r {{filename2}} {{filename}}##Set the times on a file to match those on second file
touch -t 201412250801.59 {{filename}}##Set the times on a file to those specified
touch -t {{YYYYMMDDHHMM.SS}} {{filename}}##Set the times on a file to those specified
touch {{filename}}##Create a new empty file(s) or change the times for existing file(s) to current time
tr "[:lower:]" "[:upper:]" < {{filename}}##Translate the contents of the file to upper-case and print result.
tr 'abcd' 'jkmn' < {{filename}}##Map each character of the first set to the corresponding character of the second set.
tr -cd "[:print:]" < {{filename}}##Strip out non-printable characters from the file and print result.
tr -d '{{input_characters}}'##Delete all occurances of the specified set of characters from the input.
tr -s '\n'##Compress a series of identical characters to a single character.
tr {{find_characters}} {{replace_characters}} < {{filename}}##Replace all occurrences of a character in a file, and print the result
traceroute -n {{host}}##Disable IP address and host name mapping
traceroute -q 5 {{host}}##Specify number of queries per hop
traceroute -w 0.5 {{host}}##Specify wait time for response
traceroute {{host}}##Traceroute to a host
transcode -J stabilize -i {{inputfile}}##Create stabilisation file to be able to remove camera shakes.
transcode -J transform -i {{inputfile}} -y xvid -o {{outputfile}}##Remove camera shakes after creating stabilisation file, transform video using xvid.
transcode -Z 640x480 -i {{inputfile}} -y xvid -o {{outputfile}}##Resize the video to 640x480 pixels and convert to MPEG4 codec using xvid.
tree -L {{num}}##Show files and directories with a depth of 'num'
tree -a##Show hidden files too
tree -d##Show directories only
tree -f##Print the full path for each file
tree -h##Print human readable size of files
tree -i##Print the tree without lines and indentation. Useful when used with -f
umount -a##Unmount all mounted filesystems (dangerous!)
umount {{path_to_device_file}}##Unmount a filesystem
umount {{path_to_mounted_directory}}##OR
unalias {{word}}##remove an aliased command
uname -a##Print all available system information (hardware, software, nodename)
uname -mp##Print hardware-related information: machine and processor
uname -n##Print the nodename (hostname) of the system
uname -srv##Print software-related information: operating system, release number, and version
unzip -l {{file}}##list the contents of a zip file without extracting
unzip {{file(s)}}##extract zip file(s) (for multiple files, seperate file paths by spaces)
unzip {{files(s)}} -d {{/path/to/put/extracted/files}}##extract zip files(s) to given path
uptime##Print current time, uptime, number of logged-in users and other information
useradd -G {{group1,group2}} {{name}}##Create new user with supplementary groups (mind the lack of whitespace)
useradd -m {{name}}##Create new user with a default home directory
useradd -s {{/path/to/shell}} {{name}}##Create new user with specified shell
useradd {{name}}##Create new user
userdel -r {{name}}##Remove a user and their home directory
usermod -a -G {{group1,group2}} {{user}}##Add user to supplementary groups (mind the whitespace)
usermod -l {{newname}} {{user}}##Change a user's name
usermod -m -d {{/path/to/home}} {{user}}##Create a new home directory for a user and move their files to it
view {{file}}##open a file in read-only mode
vim -p {{file1}} {{file2}} {{file3}}##open multiple files at once, each file in it's own tab page
vim {{file}} +{{linenumber}}##open a file with cursor at the given line number
vimtutor {{language}}##launch the vim tutor using the given language (en, fr, de, ...)
virtualenv {{path/to/venv}}##Create a new environment
w -h##Show logged-in users info without a header
w##Show logged-in users info
wc -c {{file}}##count bytes in file
wc -l {{file}}##count lines in file
wc -m {{file}}##count characters in file (taking multi-byte character sets into account)
wget --ftp-user={{username}} --ftp-password={{password}} {{url}}##FTP download with username and password
wget --limit-rate={{200k}} {{url}}##Limit download speed
wget --mirror -p --convert-links -P {{target_folder}} {{url}}##Download a full website
wget -O filename "{{url}}"##Download a URL to a file
wget -c {{url}}##Continue an incomplete download
which -a {{executable}}##If there are multiple executables which match, display all
which {{executable}}##Display the path of an executable program
which {{ls}}##Display the path of an executable program
whoami##Display currently logged user name
yes {{message}}##Repeatedly output "message"
yes##Repeatedly output "y"
zbarimg {{image file}}##process an image file
zfs create poolname/newfsname##Create a new ZFS filesystem
zfs destroy {{poolname/newfsname}}##Delete a ZFS filesystem
zfs list##List all available zfs filesystems
zfs set compression=on {{poolname/fileystem}}##Enable compression on a filesystem
zfs set mountpoint={{/my/mount/path}} {{poolname/filesystem}}##Change mountpoint for a filesytem
zfs snapshot {{poolname/filesystem@snapshot-name}}##Create a Snapshot of a ZFS filesystem
zip -d {{compressed.zip}} "{{foo/*.tmp}}"##remove unwanted files from an existing zip file
zip -r {{compressed.zip}} {{/path/to/dir1 /path/to/dir2 /path/to/file}}##package and compress multiple directories and files
zip {{compressed.zip}} {{path/to/file}}##add files to an existing zip file
zpool create {{poolname}} mirror {{disk1}} {{disk2}} mirror {{disk3}} {{disk4}}##Create a mirrored pool.
zpool create {{poolname}} mirror {{disk1}} {{disk2}}##Create a mirrored pool.
zpool export {{poolname}}##Export a zpool (unmount all filesystems)
zpool histrory {{poolname}}##Show the history of all pool operations
zpool import {{poolname}} {{newpoolname}}##Import a zpool, optionally specifying a new name
zpool import {{poolname}}##Import a zpool, optionally specifying a new name
zpool import##List zpools available for import
zpool scrub {{poolname}}##Check a ZFS pool for errors (verifies the checksum of EVERY block). Very CPU and disk intensive.
zpool status [{{poolname}}]##Show the configuration and status of all ZFS zpools
{{args}} | parallel -X {{command}}##parallel xargs, cram as many args as possible onto one command
